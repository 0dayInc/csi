#!/usr/bin/env ruby
# frozen_string_literal: true

require 'csi'
require 'pry'

begin
  # TODO: Remove once this feature is available in mainline
  class Pry
    # Overwrite Pry::History.push method in History class to get duplicate history entries
    # in order to properly replay automation in this prototyping driver
    class History
      def push(line)
        unless line.empty?
          @pusher.call(line)
          @history << line
          if !should_ignore?(line) && Pry.config.history.should_save
            @saver.call(line)
          end
        end
        line
      end
      alias << push
    end
  end

  cli = Pry
  cli.config.history.should_add_duplicates = true

  cli::Commands.create_command 'toggle-pager' do
    description 'Toggle less on returned objects surpassing the terminal.'

    def process
      _pry_.config.pager = if _pry_.config.pager
                             false
                           else
                             true
                           end
    end
  end

  # Custom Main & Wait (Multi-Line) Prompts
  title = "\001\e[1m\002\001\e[31m\002csi\001\e[0m\002" # Bold Red
  version = "\001\e[36m\002v#{CSI::VERSION}\001\e[0m\002" # Cyan
  arrow = "\001\e[32m\002>>>\001\e[0m\002" # Green
  splat = "\001\e[33m\002***\001\e[0m\002" # Yellow

  prompt = [
    proc do |_target_self, _nest_level, pry|
      line_pad = format('%0.3d', pry.input_array.size)
      line_count = "\001\e[34m\002#{line_pad}\001\e[0m\002" # Blue
      "#{title}[#{version}]:#{line_count} #{arrow} ".to_s.scrub
    end,
    proc do |_target_self, _nest_level, pry|
      line_pad = format('%0.3d', pry.input_array.size)
      line_count = "\001\e[34m\002#{line_pad}\001\e[0m\002" # Blue
      "#{title}[#{version}]:#{line_count} #{splat} ".to_s.scrub
    end
  ]
  cli.start(self, prompt: prompt)
rescue => e
  raise e
end
