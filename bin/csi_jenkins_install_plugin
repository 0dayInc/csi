#!/usr/bin/env ruby
# frozen_string_literal: true
require 'csi'
require 'optparse'

opts = {}
OptionParser.new do |options|
  options.banner = "USAGE:
    #{$PROGRAM_NAME} [opts]
  "

  options.on('-sIP', '--jenkins_ip=IP', '<Required - Jenkins Server IP>') { |s| opts[:jenkins_ip] = s }

  options.on('-UUSER', '--username=USER', '<Required - Jenkins Username>') do |user|
    opts[:username] = user
  end

  options.on('-PPASS', '--password=PASS', '<Required - Jenkins Password>') do |pass|
    opts[:password] = pass
  end

  options.on('-pPLUGIN', '--plugin=PLUGIN', '<Required - Comma-Delimited List of Jenkins Plugins to Install>') do |plugins|
    opts[:plugins] = plugins
  end

  options.on('-R', '--[no-]restart-jenkins', '<Restart Jenkins - Defaults to true>') do |restart_bool|
    opts[:restart_jenkins] = restart_bool
  end
end.parse!

if opts.empty?
  puts `#{$PROGRAM_NAME} --help`
  exit 1
end

jenkins_ip = opts[:jenkins_ip].to_s.scrub
username = opts[:username]
password = opts[:password]
plugins = opts[:plugins].to_s.scrub
restart_jenkins = if opts[:restart_jenkins].nil?
                    true
                  else
                    opts[:restart_jenkins]
                  end

jenkins_obj = CSI::Plugins::Jenkins.connect(
  jenkins_ip: jenkins_ip,
  username: username,
  password: password
)

plugin_arr = []
plugins.split(',').each do |p|
  plugin_arr.push(p.strip.chomp)
end

jenkins_obj.plugin.install(plugin_arr)

# until jenkins_obj.plugin.restart_required?
#  print "."
#  sleep 1
# end

jenkins_obj.system.restart if restart_jenkins

CSI::Plugins::Jenkins.disconnect(jenkins_obj: jenkins_obj)
